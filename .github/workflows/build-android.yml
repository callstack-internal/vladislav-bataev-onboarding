name: Build release without signing - Android
run-name: ${{ github.actor }} build release without signing - Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: ['main']

jobs:
  build-android:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'

      - name: Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Cache Ruby dependencies
        uses: actions/cache@v3
        with:
          path: |
            vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install npm dependencies
        run: npm install

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.4
          bundler: 1.17.2

#      - name: Install Ruby dependencies
#        run: |
#          gem install bundler -v 1.17.2
#          bundle _1.17.2_ install
#        working-directory: android

      - name: Setup Java environment
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install dependencies
        run: |
          gem install bundler -v 1.17.2
          bundle _1.17.2_ install

      - name: Run Fastlane
        run: bundle exec fastlane build
        working-directory: android

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-release-app
          path: android/app/build/outputs/apk/release/app-release.apk
